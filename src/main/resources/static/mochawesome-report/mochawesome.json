{
  "stats": {
    "suites": 3,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2017-05-16T07:08:29.531Z",
    "end": "2017-05-16T07:08:29.717Z",
    "duration": 186,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "컬러체인저 메소드 호출 테스트 ",
        "suites": [],
        "tests": [
          {
            "title": "should fake a jQuery ajax request ( ajax 네트웤 학습 테스트 ) ",
            "fullTitle": "컬러체인저 메소드 호출 테스트  should fake a jQuery ajax request ( ajax 네트웤 학습 테스트 ) ",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "server.respondWith(\"GET\", \"/something\",\n    [200, { \"Content-Type\": \"application/json\" },\n        '{ \"stuff\": \"is\", \"awesome\": \"in here\" }']);\nvar callbacks = [sinon.spy(), sinon.spy()];\n$.ajax({\n    url: \"/something\",\n    type:'GET',\n    data: {},\n    dataType: \"json\",\n    success: callbacks[0],\n    error: function(request,status,error){\n        console.log(\"에러.\");\n        console.log(\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\n    }\n});\n$.ajax({\n    url: \"/other\",\n    type:'GET',\n    data: {},\n    dataType: \"json\",\n    success: callbacks[0],\n    error: function(request,status,error){\n        console.log(\"에러.\");\n        callbacks[1]();\n        console.log(\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\n    }\n});\nserver.respond(); // Process all requests so far\nexpect(callbacks[0].calledOnce).to.be.true;\nexpect(callbacks[1].calledOnce).to.be.true;",
            "err": {},
            "isRoot": false,
            "uuid": "e62e3616-0b3c-4e86-9cdc-d1e2760a1bee",
            "parentUUID": "3e41e595-5b89-492b-a536-0e720e0cc688",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "ajax test",
            "fullTitle": "컬러체인저 메소드 호출 테스트  ajax test",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// given\nserver.respondWith(\"GET\", \"/getRamdomColor\",\n    [200, { \"Content-Type\": \"text/html\" } , 'black']);\nspy = sinon.spy(()=>{console.log(\"콜백 실행되었습니다.\");});\n// when\ncolorChanger.changeColor(spy);\nserver.respond(); // Process all requests so far\n// then\nexpect(spy.called).to.be.true;",
            "err": {},
            "isRoot": false,
            "uuid": "9991111c-1442-449b-9bcd-d2dea91d5b1a",
            "parentUUID": "3e41e595-5b89-492b-a536-0e720e0cc688",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "init 이 실행되면 이벤트 바인딩도 같이 실행된다. ",
            "fullTitle": "컬러체인저 메소드 호출 테스트  init 이 실행되면 이벤트 바인딩도 같이 실행된다. ",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "spy = sinon.spy(colorChanger, 'evtBindings');\ncolorChanger.init();\nexpect(spy.called).to.be.true;",
            "err": {},
            "isRoot": false,
            "uuid": "af9d58ac-48d9-40b3-a155-7d676c98c9d3",
            "parentUUID": "3e41e595-5b89-492b-a536-0e720e0cc688",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "click 이벤트 발생시 컬러 체인저가 발동하는가?",
            "fullTitle": "컬러체인저 메소드 호출 테스트  click 이벤트 발생시 컬러 체인저가 발동하는가?",
            "timedOut": false,
            "duration": 60,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// given\nvar spy2 = sinon.spy(colorChanger, 'changeColor');\ncolorChanger.init();\nserver.respondWith(\"GET\", \"/getRamdomColor\", [200, { \"Content-Type\": \"text/html\" } , 'black']);\n// when\n$('#changeColor').trigger('click');\n// then\nexpect(spy2.called).to.be.true;\nexpect($(\"#color-panel\").css(\"background-color\")).to.eql('black');",
            "err": {},
            "isRoot": false,
            "uuid": "ad7a5a8e-6119-4f1c-9abf-a190b7238af6",
            "parentUUID": "3e41e595-5b89-492b-a536-0e720e0cc688",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/codecoast_test.js",
        "uuid": "3e41e595-5b89-492b-a536-0e720e0cc688",
        "failedHooks": [],
        "fullFile": "/Users/jarvis/code/workspace/learn_test_front/src/main/resources/static/test/codecoast_test.js",
        "passes": [
          {
            "title": "should fake a jQuery ajax request ( ajax 네트웤 학습 테스트 ) ",
            "fullTitle": "컬러체인저 메소드 호출 테스트  should fake a jQuery ajax request ( ajax 네트웤 학습 테스트 ) ",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "server.respondWith(\"GET\", \"/something\",\n    [200, { \"Content-Type\": \"application/json\" },\n        '{ \"stuff\": \"is\", \"awesome\": \"in here\" }']);\nvar callbacks = [sinon.spy(), sinon.spy()];\n$.ajax({\n    url: \"/something\",\n    type:'GET',\n    data: {},\n    dataType: \"json\",\n    success: callbacks[0],\n    error: function(request,status,error){\n        console.log(\"에러.\");\n        console.log(\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\n    }\n});\n$.ajax({\n    url: \"/other\",\n    type:'GET',\n    data: {},\n    dataType: \"json\",\n    success: callbacks[0],\n    error: function(request,status,error){\n        console.log(\"에러.\");\n        callbacks[1]();\n        console.log(\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\n    }\n});\nserver.respond(); // Process all requests so far\nexpect(callbacks[0].calledOnce).to.be.true;\nexpect(callbacks[1].calledOnce).to.be.true;",
            "err": {},
            "isRoot": false,
            "uuid": "e62e3616-0b3c-4e86-9cdc-d1e2760a1bee",
            "parentUUID": "3e41e595-5b89-492b-a536-0e720e0cc688",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "ajax test",
            "fullTitle": "컬러체인저 메소드 호출 테스트  ajax test",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// given\nserver.respondWith(\"GET\", \"/getRamdomColor\",\n    [200, { \"Content-Type\": \"text/html\" } , 'black']);\nspy = sinon.spy(()=>{console.log(\"콜백 실행되었습니다.\");});\n// when\ncolorChanger.changeColor(spy);\nserver.respond(); // Process all requests so far\n// then\nexpect(spy.called).to.be.true;",
            "err": {},
            "isRoot": false,
            "uuid": "9991111c-1442-449b-9bcd-d2dea91d5b1a",
            "parentUUID": "3e41e595-5b89-492b-a536-0e720e0cc688",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "init 이 실행되면 이벤트 바인딩도 같이 실행된다. ",
            "fullTitle": "컬러체인저 메소드 호출 테스트  init 이 실행되면 이벤트 바인딩도 같이 실행된다. ",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "spy = sinon.spy(colorChanger, 'evtBindings');\ncolorChanger.init();\nexpect(spy.called).to.be.true;",
            "err": {},
            "isRoot": false,
            "uuid": "af9d58ac-48d9-40b3-a155-7d676c98c9d3",
            "parentUUID": "3e41e595-5b89-492b-a536-0e720e0cc688",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "click 이벤트 발생시 컬러 체인저가 발동하는가?",
            "fullTitle": "컬러체인저 메소드 호출 테스트  click 이벤트 발생시 컬러 체인저가 발동하는가?",
            "timedOut": false,
            "duration": 60,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// given\nvar spy2 = sinon.spy(colorChanger, 'changeColor');\ncolorChanger.init();\nserver.respondWith(\"GET\", \"/getRamdomColor\", [200, { \"Content-Type\": \"text/html\" } , 'black']);\n// when\n$('#changeColor').trigger('click');\n// then\nexpect(spy2.called).to.be.true;\nexpect($(\"#color-panel\").css(\"background-color\")).to.eql('black');",
            "err": {},
            "isRoot": false,
            "uuid": "ad7a5a8e-6119-4f1c-9abf-a190b7238af6",
            "parentUUID": "3e41e595-5b89-492b-a536-0e720e0cc688",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasFailedHooks": false,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 92,
        "rootEmpty": false
      },
      {
        "title": "fibonacci test",
        "suites": [],
        "tests": [
          {
            "title": "수열의 첫 번째 값은 0이어야 한다.",
            "fullTitle": "fibonacci test 수열의 첫 번째 값은 0이어야 한다.",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// given\n// when\nconst actual = fibonacci(0);\n// then\nactual.should.be.eql(0);",
            "err": {},
            "isRoot": false,
            "uuid": "2f8ce70a-8c00-4dd1-be88-9937faf8e69a",
            "parentUUID": "6d3b271e-0c63-4f66-9968-6a2242def54c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "수열의 두 번째 값은 1이어야 한다.",
            "fullTitle": "fibonacci test 수열의 두 번째 값은 1이어야 한다.",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// given\n// when\nconst actual = fibonacci(1);\n// then\nactual.should.be.eql(1);",
            "err": {},
            "isRoot": false,
            "uuid": "eda80131-cfa0-4ffa-b1b9-da56ab1e8336",
            "parentUUID": "6d3b271e-0c63-4f66-9968-6a2242def54c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "수열의 n 번째 값은 n-2번째와 n-1번째 값의 합이어야 한다.",
            "fullTitle": "fibonacci test 수열의 n 번째 값은 n-2번째와 n-1번째 값의 합이어야 한다.",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "fibonacci(3).should.be.eql(fibonacci(1) + fibonacci(2));\nfibonacci(100000).should.be.eql(fibonacci(99998) + fibonacci(99999));",
            "err": {},
            "isRoot": false,
            "uuid": "3dd1ec58-949a-4d72-8132-ec25bf1aa4fb",
            "parentUUID": "6d3b271e-0c63-4f66-9968-6a2242def54c",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/fibonacci_test.js",
        "uuid": "6d3b271e-0c63-4f66-9968-6a2242def54c",
        "failedHooks": [],
        "fullFile": "/Users/jarvis/code/workspace/learn_test_front/src/main/resources/static/test/fibonacci_test.js",
        "passes": [
          {
            "title": "수열의 첫 번째 값은 0이어야 한다.",
            "fullTitle": "fibonacci test 수열의 첫 번째 값은 0이어야 한다.",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// given\n// when\nconst actual = fibonacci(0);\n// then\nactual.should.be.eql(0);",
            "err": {},
            "isRoot": false,
            "uuid": "2f8ce70a-8c00-4dd1-be88-9937faf8e69a",
            "parentUUID": "6d3b271e-0c63-4f66-9968-6a2242def54c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "수열의 두 번째 값은 1이어야 한다.",
            "fullTitle": "fibonacci test 수열의 두 번째 값은 1이어야 한다.",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// given\n// when\nconst actual = fibonacci(1);\n// then\nactual.should.be.eql(1);",
            "err": {},
            "isRoot": false,
            "uuid": "eda80131-cfa0-4ffa-b1b9-da56ab1e8336",
            "parentUUID": "6d3b271e-0c63-4f66-9968-6a2242def54c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "수열의 n 번째 값은 n-2번째와 n-1번째 값의 합이어야 한다.",
            "fullTitle": "fibonacci test 수열의 n 번째 값은 n-2번째와 n-1번째 값의 합이어야 한다.",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "fibonacci(3).should.be.eql(fibonacci(1) + fibonacci(2));\nfibonacci(100000).should.be.eql(fibonacci(99998) + fibonacci(99999));",
            "err": {},
            "isRoot": false,
            "uuid": "3dd1ec58-949a-4d72-8132-ec25bf1aa4fb",
            "parentUUID": "6d3b271e-0c63-4f66-9968-6a2242def54c",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasFailedHooks": false,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 7,
        "rootEmpty": false
      },
      {
        "title": "fibonacci test2",
        "suites": [],
        "tests": [
          {
            "title": "should render",
            "fullTitle": "fibonacci test2 should render",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var a = 1;\na.should.be.eql(1);",
            "err": {},
            "isRoot": false,
            "uuid": "2e1cdf6e-144f-4895-be90-fa62d7c3b0b7",
            "parentUUID": "a09fbfe8-0c0b-4926-bf49-38b5ae5b64b1",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/fibonacci_test.js",
        "uuid": "a09fbfe8-0c0b-4926-bf49-38b5ae5b64b1",
        "failedHooks": [],
        "fullFile": "/Users/jarvis/code/workspace/learn_test_front/src/main/resources/static/test/fibonacci_test.js",
        "passes": [
          {
            "title": "should render",
            "fullTitle": "fibonacci test2 should render",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var a = 1;\na.should.be.eql(1);",
            "err": {},
            "isRoot": false,
            "uuid": "2e1cdf6e-144f-4895-be90-fa62d7c3b0b7",
            "parentUUID": "a09fbfe8-0c0b-4926-bf49-38b5ae5b64b1",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasFailedHooks": false,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "1e573fa3-f74b-4d11-839e-a7f7d796c313",
    "failedHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasFailedHooks": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should fake a jQuery ajax request ( ajax 네트웤 학습 테스트 ) ",
      "fullTitle": "컬러체인저 메소드 호출 테스트  should fake a jQuery ajax request ( ajax 네트웤 학습 테스트 ) ",
      "timedOut": false,
      "duration": 23,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "server.respondWith(\"GET\", \"/something\",\n    [200, { \"Content-Type\": \"application/json\" },\n        '{ \"stuff\": \"is\", \"awesome\": \"in here\" }']);\nvar callbacks = [sinon.spy(), sinon.spy()];\n$.ajax({\n    url: \"/something\",\n    type:'GET',\n    data: {},\n    dataType: \"json\",\n    success: callbacks[0],\n    error: function(request,status,error){\n        console.log(\"에러.\");\n        console.log(\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\n    }\n});\n$.ajax({\n    url: \"/other\",\n    type:'GET',\n    data: {},\n    dataType: \"json\",\n    success: callbacks[0],\n    error: function(request,status,error){\n        console.log(\"에러.\");\n        callbacks[1]();\n        console.log(\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\n    }\n});\nserver.respond(); // Process all requests so far\nexpect(callbacks[0].calledOnce).to.be.true;\nexpect(callbacks[1].calledOnce).to.be.true;",
      "err": {},
      "isRoot": false,
      "uuid": "e62e3616-0b3c-4e86-9cdc-d1e2760a1bee",
      "parentUUID": "3e41e595-5b89-492b-a536-0e720e0cc688",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "ajax test",
      "fullTitle": "컬러체인저 메소드 호출 테스트  ajax test",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "// given\nserver.respondWith(\"GET\", \"/getRamdomColor\",\n    [200, { \"Content-Type\": \"text/html\" } , 'black']);\nspy = sinon.spy(()=>{console.log(\"콜백 실행되었습니다.\");});\n// when\ncolorChanger.changeColor(spy);\nserver.respond(); // Process all requests so far\n// then\nexpect(spy.called).to.be.true;",
      "err": {},
      "isRoot": false,
      "uuid": "9991111c-1442-449b-9bcd-d2dea91d5b1a",
      "parentUUID": "3e41e595-5b89-492b-a536-0e720e0cc688",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "init 이 실행되면 이벤트 바인딩도 같이 실행된다. ",
      "fullTitle": "컬러체인저 메소드 호출 테스트  init 이 실행되면 이벤트 바인딩도 같이 실행된다. ",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spy = sinon.spy(colorChanger, 'evtBindings');\ncolorChanger.init();\nexpect(spy.called).to.be.true;",
      "err": {},
      "isRoot": false,
      "uuid": "af9d58ac-48d9-40b3-a155-7d676c98c9d3",
      "parentUUID": "3e41e595-5b89-492b-a536-0e720e0cc688",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "click 이벤트 발생시 컬러 체인저가 발동하는가?",
      "fullTitle": "컬러체인저 메소드 호출 테스트  click 이벤트 발생시 컬러 체인저가 발동하는가?",
      "timedOut": false,
      "duration": 60,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "// given\nvar spy2 = sinon.spy(colorChanger, 'changeColor');\ncolorChanger.init();\nserver.respondWith(\"GET\", \"/getRamdomColor\", [200, { \"Content-Type\": \"text/html\" } , 'black']);\n// when\n$('#changeColor').trigger('click');\n// then\nexpect(spy2.called).to.be.true;\nexpect($(\"#color-panel\").css(\"background-color\")).to.eql('black');",
      "err": {},
      "isRoot": false,
      "uuid": "ad7a5a8e-6119-4f1c-9abf-a190b7238af6",
      "parentUUID": "3e41e595-5b89-492b-a536-0e720e0cc688",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "수열의 첫 번째 값은 0이어야 한다.",
      "fullTitle": "fibonacci test 수열의 첫 번째 값은 0이어야 한다.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "// given\n// when\nconst actual = fibonacci(0);\n// then\nactual.should.be.eql(0);",
      "err": {},
      "isRoot": false,
      "uuid": "2f8ce70a-8c00-4dd1-be88-9937faf8e69a",
      "parentUUID": "6d3b271e-0c63-4f66-9968-6a2242def54c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "수열의 두 번째 값은 1이어야 한다.",
      "fullTitle": "fibonacci test 수열의 두 번째 값은 1이어야 한다.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "// given\n// when\nconst actual = fibonacci(1);\n// then\nactual.should.be.eql(1);",
      "err": {},
      "isRoot": false,
      "uuid": "eda80131-cfa0-4ffa-b1b9-da56ab1e8336",
      "parentUUID": "6d3b271e-0c63-4f66-9968-6a2242def54c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "수열의 n 번째 값은 n-2번째와 n-1번째 값의 합이어야 한다.",
      "fullTitle": "fibonacci test 수열의 n 번째 값은 n-2번째와 n-1번째 값의 합이어야 한다.",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "fibonacci(3).should.be.eql(fibonacci(1) + fibonacci(2));\nfibonacci(100000).should.be.eql(fibonacci(99998) + fibonacci(99999));",
      "err": {},
      "isRoot": false,
      "uuid": "3dd1ec58-949a-4d72-8132-ec25bf1aa4fb",
      "parentUUID": "6d3b271e-0c63-4f66-9968-6a2242def54c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render",
      "fullTitle": "fibonacci test2 should render",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var a = 1;\na.should.be.eql(1);",
      "err": {},
      "isRoot": false,
      "uuid": "2e1cdf6e-144f-4895-be90-fa62d7c3b0b7",
      "parentUUID": "a09fbfe8-0c0b-4926-bf49-38b5ae5b64b1",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should fake a jQuery ajax request ( ajax 네트웤 학습 테스트 ) ",
      "fullTitle": "컬러체인저 메소드 호출 테스트  should fake a jQuery ajax request ( ajax 네트웤 학습 테스트 ) ",
      "timedOut": false,
      "duration": 23,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "server.respondWith(\"GET\", \"/something\",\n    [200, { \"Content-Type\": \"application/json\" },\n        '{ \"stuff\": \"is\", \"awesome\": \"in here\" }']);\nvar callbacks = [sinon.spy(), sinon.spy()];\n$.ajax({\n    url: \"/something\",\n    type:'GET',\n    data: {},\n    dataType: \"json\",\n    success: callbacks[0],\n    error: function(request,status,error){\n        console.log(\"에러.\");\n        console.log(\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\n    }\n});\n$.ajax({\n    url: \"/other\",\n    type:'GET',\n    data: {},\n    dataType: \"json\",\n    success: callbacks[0],\n    error: function(request,status,error){\n        console.log(\"에러.\");\n        callbacks[1]();\n        console.log(\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\n    }\n});\nserver.respond(); // Process all requests so far\nexpect(callbacks[0].calledOnce).to.be.true;\nexpect(callbacks[1].calledOnce).to.be.true;",
      "err": {},
      "isRoot": false,
      "uuid": "e62e3616-0b3c-4e86-9cdc-d1e2760a1bee",
      "parentUUID": "3e41e595-5b89-492b-a536-0e720e0cc688",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "ajax test",
      "fullTitle": "컬러체인저 메소드 호출 테스트  ajax test",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "// given\nserver.respondWith(\"GET\", \"/getRamdomColor\",\n    [200, { \"Content-Type\": \"text/html\" } , 'black']);\nspy = sinon.spy(()=>{console.log(\"콜백 실행되었습니다.\");});\n// when\ncolorChanger.changeColor(spy);\nserver.respond(); // Process all requests so far\n// then\nexpect(spy.called).to.be.true;",
      "err": {},
      "isRoot": false,
      "uuid": "9991111c-1442-449b-9bcd-d2dea91d5b1a",
      "parentUUID": "3e41e595-5b89-492b-a536-0e720e0cc688",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "init 이 실행되면 이벤트 바인딩도 같이 실행된다. ",
      "fullTitle": "컬러체인저 메소드 호출 테스트  init 이 실행되면 이벤트 바인딩도 같이 실행된다. ",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spy = sinon.spy(colorChanger, 'evtBindings');\ncolorChanger.init();\nexpect(spy.called).to.be.true;",
      "err": {},
      "isRoot": false,
      "uuid": "af9d58ac-48d9-40b3-a155-7d676c98c9d3",
      "parentUUID": "3e41e595-5b89-492b-a536-0e720e0cc688",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "click 이벤트 발생시 컬러 체인저가 발동하는가?",
      "fullTitle": "컬러체인저 메소드 호출 테스트  click 이벤트 발생시 컬러 체인저가 발동하는가?",
      "timedOut": false,
      "duration": 60,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "// given\nvar spy2 = sinon.spy(colorChanger, 'changeColor');\ncolorChanger.init();\nserver.respondWith(\"GET\", \"/getRamdomColor\", [200, { \"Content-Type\": \"text/html\" } , 'black']);\n// when\n$('#changeColor').trigger('click');\n// then\nexpect(spy2.called).to.be.true;\nexpect($(\"#color-panel\").css(\"background-color\")).to.eql('black');",
      "err": {},
      "isRoot": false,
      "uuid": "ad7a5a8e-6119-4f1c-9abf-a190b7238af6",
      "parentUUID": "3e41e595-5b89-492b-a536-0e720e0cc688",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "수열의 첫 번째 값은 0이어야 한다.",
      "fullTitle": "fibonacci test 수열의 첫 번째 값은 0이어야 한다.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "// given\n// when\nconst actual = fibonacci(0);\n// then\nactual.should.be.eql(0);",
      "err": {},
      "isRoot": false,
      "uuid": "2f8ce70a-8c00-4dd1-be88-9937faf8e69a",
      "parentUUID": "6d3b271e-0c63-4f66-9968-6a2242def54c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "수열의 두 번째 값은 1이어야 한다.",
      "fullTitle": "fibonacci test 수열의 두 번째 값은 1이어야 한다.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "// given\n// when\nconst actual = fibonacci(1);\n// then\nactual.should.be.eql(1);",
      "err": {},
      "isRoot": false,
      "uuid": "eda80131-cfa0-4ffa-b1b9-da56ab1e8336",
      "parentUUID": "6d3b271e-0c63-4f66-9968-6a2242def54c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "수열의 n 번째 값은 n-2번째와 n-1번째 값의 합이어야 한다.",
      "fullTitle": "fibonacci test 수열의 n 번째 값은 n-2번째와 n-1번째 값의 합이어야 한다.",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "fibonacci(3).should.be.eql(fibonacci(1) + fibonacci(2));\nfibonacci(100000).should.be.eql(fibonacci(99998) + fibonacci(99999));",
      "err": {},
      "isRoot": false,
      "uuid": "3dd1ec58-949a-4d72-8132-ec25bf1aa4fb",
      "parentUUID": "6d3b271e-0c63-4f66-9968-6a2242def54c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render",
      "fullTitle": "fibonacci test2 should render",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var a = 1;\na.should.be.eql(1);",
      "err": {},
      "isRoot": false,
      "uuid": "2e1cdf6e-144f-4895-be90-fa62d7c3b0b7",
      "parentUUID": "a09fbfe8-0c0b-4926-bf49-38b5ae5b64b1",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}